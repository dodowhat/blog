<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 纸上谈兵</title>
    <link>/blog/posts/</link>
    <description>纸上谈兵 (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 06 Nov 2020 20:45:17 +0800</lastBuildDate>
    
    <atom:link href="/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux 系统 Clash 服务管理</title>
      <link>/blog/posts/clash-service-management-on-linux/</link>
      <pubDate>Fri, 06 Nov 2020 20:45:17 +0800</pubDate>
      
      <guid>/blog/posts/clash-service-management-on-linux/</guid>
      <description>&lt;p&gt;Clash 是一款支持多种协议的代理客户端，在 Windows 以及 MacOS 上均有图形化版本，然而 Linux 上没有。&lt;/p&gt;
&lt;p&gt;好在 Clash 提供了用于管理服务的 RESTful API ，并且作者开发了配套的 Web 版管理面板，其他人也可以根据 API 开发自己的管理面板。&lt;/p&gt;
&lt;p&gt;本文记录了如何在 Linux 系统上丝滑地使用 Clash 服务。&lt;/p&gt;
&lt;p&gt;(本文内容包含的脚本相对粗糙，是为了降低复杂度说清原理而简化的原始版本，完全版已上传至 Github 仓库 &lt;a href=&#34;https://github.com/dodowhat/clash-for-linux&#34;&gt;clash-for-linux&lt;/a&gt; ，功能更完善)&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://github.com/Dreamacro/clash/releases&#34;&gt;Clash Github Releases&lt;/a&gt;，找到适合自己硬件架构的版本，一般为 clash-linux-amd64。&lt;/p&gt;
&lt;p&gt;命令行操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建一个工作目录&lt;/span&gt;
$ mkdir clash-linux-management-tools
$ cd clash-linux-management-tools
&lt;span style=&#34;color:#75715e&#34;&gt;# 下载&lt;/span&gt;
$ wget https://github.com/Dreamacro/clash/releases/download/v1.2.0/clash-linux-amd64-v1.2.0.gz
&lt;span style=&#34;color:#75715e&#34;&gt;# 解压&lt;/span&gt;
$ gzip -d clash-linux-amd64-v1.2.0.gz
&lt;span style=&#34;color:#75715e&#34;&gt;# 解压出来程序的文件名带有平台、版本等信息，重命名为 clash 方便执行&lt;/span&gt;
$ mv clash-linux-amd64-v1.2.0 clash
&lt;span style=&#34;color:#75715e&#34;&gt;# 赋予程序可执行权限&lt;/span&gt;
$ chmod u+x clash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;后台运行&#34;&gt;后台运行&lt;/h2&gt;
&lt;p&gt;Clash 本身不提供后台服务运行的功能，需要用户自己想办法，大致有三种实现方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Systemd (官方 Gihub Wiki 有具体教程)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;通过创建 Systemd 配置文件将 Clash 纳入系统进程管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第三方进程管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;常见的有：&lt;a href=&#34;https://pm2.keymetrics.io/&#34;&gt;pm2&lt;/a&gt; &lt;a href=&#34;https://nodemon.io/&#34;&gt;nodemon&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Shell 命令&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;利用 nohup 命令以及其它进程管理命令实现后台运行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;个人不喜欢前两种方式，所以选择第三种方式。&lt;/p&gt;
&lt;p&gt;启动服务脚本 start.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 检测并结束正在运行的 Clash 服务，下面会讲到&lt;/span&gt;
./stop.sh

&lt;span style=&#34;color:#75715e&#34;&gt;# 启动服务&lt;/span&gt;
nohup ./clash -d . &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动命令有三部分，简单说明一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nohup&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个命令可以让你执行的程序忽略“挂起”信号。
也就是说假如你通过它运行了某个程序，然后关掉了终端窗口，这个程序依旧会在系统里运行。
使用方法为在你执行的命令最前面加上 nohup 就可以了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;./clash -d .&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这是普通方式启动 Clash 的命令。
-d 参数可以指定配置文件所在的目录，这里我指定为当前所在目录，所以写一个 . 就可以了。
特别说明一下配置文件名称必须为 config.yaml，否则程序不会识别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者也可以用 -f 参数指定配置文件，文件名无要求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这部分用一句话概括就是“保持静默地在后台运行”，在搜索 nohup 相关资料时应该会有提及，这里就不赘述了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;结束服务脚本 stop.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 查找 clash 服务的进程ID&lt;/span&gt;
PID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pidof clash&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PID&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 根据进程ID结束进程&lt;/span&gt;
    kill -9 $PID
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好了，现在就可以通过脚来启动或结束服务了。&lt;/p&gt;
&lt;p&gt;接下来看如何管理“机场”订阅的配置文件。&lt;/p&gt;
&lt;h2 id=&#34;订阅配置管理&#34;&gt;订阅配置管理&lt;/h2&gt;
&lt;p&gt;如今网络上有很多提供代理服务的商家 (俗称“机场”)，订阅之后会向你提供一个链接用来下载配置文件。&lt;/p&gt;
&lt;p&gt;图形化版本的 Clash 可以很方便地通过鼠标点点点来管理这些订阅配置，那么如何通过命令行来做到这些呢？&lt;/p&gt;
&lt;p&gt;首先我们创建一个目录，用来存放下载后的订阅配置文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir configs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着创建订阅配置管理脚本，假如某“机场”名叫 &amp;ldquo;abc&amp;rdquo; ，创建 abc.sh (名字可以随便起)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 这里填你的订阅链接&lt;/span&gt;
URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://abc.xyz/user123/clash&amp;#34;&lt;/span&gt;

FILENAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;configs/&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;basename $0 .sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;.yaml

curl -L &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;URL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FILENAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    cp &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FILENAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; config.yaml
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行这个脚本后会在 configs 目录下生成 abc.yaml (与脚本名称自动保持一致) 并且覆盖到 config.yaml 作为默认配置。&lt;/p&gt;
&lt;p&gt;如果你还有其它的订阅链接，将这份脚本复制一份，改个文件名 (比如 def.sh)，再修改里面的 URL 就可以使用了。&lt;/p&gt;
&lt;h2 id=&#34;半场总结&#34;&gt;半场总结&lt;/h2&gt;
&lt;p&gt;现在我们回顾一下当前工作目录的文件结构&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;|clash-linux-management-tools
    |---- clash          解压并重命名的 clash 本体
    |---- config.yaml    默认配置文件
    |---- start.sh       启动/重启脚本
    |---- stop.sh        结束运行脚本
    |---- abc.sh         abc订阅更新脚本
    |---- def.sh         def订阅更新脚本
    |==== configs        订阅配置下载目录
        |---- abc.yaml   下载的abc订阅配置
        |---- def.yaml   下载的def订阅配置
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来部署 Web 管理面板。&lt;/p&gt;
&lt;h2 id=&#34;部署-web-管理面板&#34;&gt;部署 Web 管理面板&lt;/h2&gt;
&lt;p&gt;Web 管理面板有两个版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Dreamacro/clash-dashboard&#34;&gt;clash-dashboard&lt;/a&gt; 由 Clash 作者开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/haishanh/yacd&#34;&gt;yacd&lt;/a&gt; 由第三方作者开发&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个项目的 gh-pages 分支均为编译好的成品，可直接部署使用。&lt;/p&gt;
&lt;p&gt;以 yacd 为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 下载&lt;/span&gt;
$ curl -L https://github.com/haishanh/yacd/archive/gh-pages.zip --output yacd-gh-pages.zip

&lt;span style=&#34;color:#75715e&#34;&gt;# 解压并重命名&lt;/span&gt;
unzip yacd-gh-pages.zip
mv yacd-gh-pages ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后修改 start.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 启动服务&lt;/span&gt;
nohup ./clash -d . -ext-ctl 127.0.0.1:9090 -ext-ui ui &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后就可以访问 http://127.0.0.1:9090/ui 使用了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vue 引入 TinyMCE 富文本编辑器</title>
      <link>/blog/posts/vue-tinymce-intergration/</link>
      <pubDate>Thu, 07 May 2020 14:44:38 +0800</pubDate>
      
      <guid>/blog/posts/vue-tinymce-intergration/</guid>
      <description>&lt;p&gt;本项目基于 &lt;a href=&#34;https://github.com/vuejs/vue-cli&#34;&gt;vue-cli&lt;/a&gt; 创建的项目实现。&lt;/p&gt;
&lt;p&gt;将 TinyMCE 封装成一个 Vue Component，过程稍有些不优雅，因为官方提供的 tinymce-vue 功能不完善，不能直接使用。&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;首先，通过 npm 安装 tinymce 和 tinymce-vue&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ npm install --save tinymce
$ npm install --save @tinymce/tinymce-vue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着，是不优雅的部分:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;复制 &lt;code&gt;node_modules/tinymce/skins&lt;/code&gt; 目录到 &lt;code&gt;public/&lt;/code&gt; 和 &lt;code&gt;public/js/&lt;/code&gt; 目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://www.tiny.cloud/get-tiny/language-packages/&#34;&gt;https://www.tiny.cloud/get-tiny/language-packages/&lt;/a&gt;
下载中文语言包，放入 &lt;code&gt;public/js/langs/&lt;/code&gt; 目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为项目根目录设置一个别名，方便引用语言包，编辑 &lt;code&gt;vue.config.js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;configureWebpack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;alias&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)
      }
    }
  },
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建-vue-组件&#34;&gt;创建 Vue 组件&lt;/h2&gt;
&lt;p&gt;我将它命名为 &lt;code&gt;MyTinymce&lt;/code&gt; 保存在 &lt;code&gt;src/components/MyTinymce/index.vue&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;tinymce-vue&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-model&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;:value&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;value&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;:init&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;init&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$emit(&amp;#39;input&amp;#39;, content)&amp;#34;&lt;/span&gt;
  /&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TinymceVue&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@tinymce/tinymce-vue&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tinymce/tinymce&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;// 加载皮肤
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tinymce/themes/silver&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;// 加载语言包
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~/public/js/langs/zh_CN.js&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;// 加载插件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tinymce/plugins/image&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tinymce/plugins/imagetools&amp;#39;&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugins&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;image imagetools axupimgs&amp;#39;&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;toolbar&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;undo redo | fontsizeselect | forecolor backcolor | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | axupimgs&amp;#39;&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;images_upload_handler&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;blobInfo&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;failure&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;blobInfo&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;blob&lt;/span&gt;()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;failure&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请上传小于2M的图片&amp;#39;&lt;/span&gt;)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// upload file ...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;language&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zh_CN&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;plugins&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugins&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;menubar&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;toolbar&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;toolbar&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;images_upload_handler&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;images_upload_handler&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;imagetools_cors_hosts&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example.com&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#75715e&#34;&gt;//如果图片链接是跨域的，需要将图片域名写入这个参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;branding&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
  }

  &lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MyTinymce&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;TinymceVue&lt;/span&gt;
    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;],
    &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;
      }
    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;mounted&lt;/span&gt;() {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;
    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;watch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;val&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;val&lt;/span&gt;
      }
    }
  }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;调用示例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;my-tinymce&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-model&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;article.content&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;本文主要实现了 TinyMCE 在 Vue 项目中的正常使用，后续可以将它打造成更灵活的基础组件。
比如将 &lt;code&gt;init&lt;/code&gt; 作为 &lt;code&gt;props&lt;/code&gt; 参数由外部传入等等，这里就不展开了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>自用 RSS 服务搭建 (Miniflux &#43; RSSHub)</title>
      <link>/blog/posts/rss-service-deployment-via-docker-on-ubuntu/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:31 +0800</pubDate>
      
      <guid>/blog/posts/rss-service-deployment-via-docker-on-ubuntu/</guid>
      <description>&lt;p&gt;RSSHub 是一个开源易用的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源，官网有详细介绍，链接在文章底部。&lt;/p&gt;
&lt;p&gt;Miniflux 是一个网页版 RSS 阅读器，简洁干净。&lt;/p&gt;
&lt;p&gt;本文主要记录 Miniflux + RSSHub 的搭建过程。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;VPS 初始化以及 Docker 安装参考这篇文章 &lt;a href=&#34;/blog/posts/ubuntu-server-initiation-and-docker-installation&#34;&gt;Ubuntu VPS 初始化设置 + Docker安装&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;部署-miniflux&#34;&gt;部署 Miniflux&lt;/h2&gt;
&lt;p&gt;新建 Docker Compose 配置文件，保存为 &lt;code&gt;docker-compose-miniflux.yml&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;services&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;miniflux&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;image&lt;/span&gt;: miniflux/miniflux:latest
    &lt;span style=&#34;color:#66d9ef&#34;&gt;ports&lt;/span&gt;:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080:8080&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;depends_on&lt;/span&gt;:
      - db
    &lt;span style=&#34;color:#66d9ef&#34;&gt;environment&lt;/span&gt;:
      - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable
  &lt;span style=&#34;color:#66d9ef&#34;&gt;db&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;image&lt;/span&gt;: postgres:latest
    &lt;span style=&#34;color:#66d9ef&#34;&gt;environment&lt;/span&gt;:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
    &lt;span style=&#34;color:#66d9ef&#34;&gt;volumes&lt;/span&gt;:
      - miniflux-db:/var/lib/postgresql/data
&lt;span style=&#34;color:#66d9ef&#34;&gt;volumes&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;miniflux-db&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动服务:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo docker-compose -f docker-compose-miniflux.yml up -d db
$ sudo docker-compose -f docker-compose-miniflux.yml up -d miniflux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;初始化数据库:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker-compose -f docker-compose-miniflux.yml exec miniflux /usr/bin/miniflux -migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建用户，根据提示输入用户名及密码:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker-compose -f docker-compose-miniflux.yml exec miniflux /usr/bin/miniflux -create-admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;部署完成，现在可以访问 &lt;code&gt;http://your-vps-ip:8080&lt;/code&gt; 使用了。&lt;/p&gt;
&lt;h2 id=&#34;部署-rsshub&#34;&gt;部署 RSSHub&lt;/h2&gt;
&lt;p&gt;下载官方 Docker Compose 配置，保存为 &lt;code&gt;docker-compose-rsshub.yml&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ wget https://raw.githubusercontent.com/DIYgod/RSSHub/master/docker-compose.yml -o docker-compose-rsshub.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建 volume 持久化 Redis 缓存:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker volume create redis-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo docker-compose -f docker-compse-rsshub.yml up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;部署完成，现在可以访问 &lt;code&gt;http://your-vps-ip:1200&lt;/code&gt; 使用了。&lt;/p&gt;
&lt;h2 id=&#34;配置-nginx-端口转发使用域名访问&#34;&gt;配置 Nginx 端口转发，使用域名访问&lt;/h2&gt;
&lt;p&gt;解析域名到你的 VPS ，假设域名分别为:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rss.example.com  # Miniflux
rsshub.example.com  # RSSHub
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装 Nginx :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt install -y nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先简单修改下默认配置:&lt;/p&gt;
&lt;p&gt;禁用 &lt;code&gt;IP&lt;/code&gt; 直接访问，编辑 &lt;code&gt;/etc/nginx/site-available/default&lt;/code&gt; ，注释掉 &lt;code&gt;location {}&lt;/code&gt; ，接着写入:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;404&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;隐藏 &lt;code&gt;404&lt;/code&gt; 页面版本号，编辑 &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; ，在 &lt;code&gt;http {}&lt;/code&gt; 中写入:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;server_tokens&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;off&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置端口转发及域名访问，新建配置文件 &lt;code&gt;/etc/nginx/site-available/rss.conf&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Miniflux
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;server&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;rss.example.com&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;index.html&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt; {
        &lt;span style=&#34;color:#f92672&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;http://127.0.0.1:8080&lt;/span&gt;;
    }
}

&lt;span style=&#34;color:#75715e&#34;&gt;# RSSHub
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;server&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;rsshub.example.com&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;index.html&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt; {
        &lt;span style=&#34;color:#f92672&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;http://127.0.0.1:1200&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启用配置:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo ln -s /etc/nginx/site-available/rss.conf /etc/ngxin/site-enabled/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启服务:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在可以用域名访问了。&lt;/p&gt;
&lt;h2 id=&#34;使用-certbot-签发-lets-encrypt-证书&#34;&gt;使用 Certbot 签发 Let&amp;rsquo;s Encrypt 证书&lt;/h2&gt;
&lt;p&gt;安装 certbot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt-get update
$ sudo apt-get install software-properties-common
$ sudo add-apt-repository universe
$ sudo add-apt-repository ppa:certbot/certbot
$ sudo apt-get update
$ sudo apt-get install certbot python3-certbot-nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;签发证书:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo certbot certonly --nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据提示输入域名和邮箱&lt;/p&gt;
&lt;p&gt;证书默认生成在&lt;code&gt;/etc/letsencrypt/live/&amp;lt;YOUR.DOMAIN.COM/&amp;gt;&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;现在可以用 HTTPS 访问了。&lt;/p&gt;
&lt;p&gt;PS: 配置过程中的一个小插曲，&lt;code&gt;ssl_certificate&lt;/code&gt; 要用 &lt;code&gt;fullchain.pem&lt;/code&gt; ，不要用 &lt;code&gt;cert.pem&lt;/code&gt; ，否则访问可能出现下面的错误:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;x509: certificate signed by unknown authority
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置-rsshub-用户认证&#34;&gt;配置 RSSHub 用户认证&lt;/h2&gt;
&lt;p&gt;现在这个建好的 RSSHub 服务是公开的，可以被别人直接访问使用。&lt;/p&gt;
&lt;p&gt;我希望只给自己使用，不被白嫖，所以给它加上用户认证。&lt;/p&gt;
&lt;p&gt;RSSHub 自带 HTTP 基础认证功能，但只给少部分路由开启，不符合我的需求。&lt;/p&gt;
&lt;p&gt;这里我通过配置 Nginx 给所有路由加上 HTTP 基础认证。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;htpasswd&lt;/code&gt; 工具创建用户认证密码文件:&lt;/p&gt;
&lt;p&gt;安装工具:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt install -y apache2-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建用户:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo htpasswd -c /etc/nginx/htpasswd user1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;user1&lt;/code&gt; 是你想要的用户名，随便取，根据提示设定密码。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-c&lt;/code&gt; 参数表示新建密码文件，如果文件已存在，去掉这个参数。&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/nginx/site-available/rss.conf&lt;/code&gt; ，找到 RSSHub 的 &lt;code&gt;location {}&lt;/code&gt; 部分，修改为:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;proxy_pass&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;http://127.0.0.1:1200&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;auth_basic&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Restricted&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;Content&amp;#34;&lt;/span&gt;;
    &lt;span style=&#34;color:#f92672&#34;&gt;auth_basic_user_file&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/etc/nginx/htpasswd&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启 Nginx:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;RSSHub 用户认证配置好了。在 Miniflux 中新增订阅时，在 &lt;code&gt;高级选项&lt;/code&gt; 中填写刚才的用户名密码就可以了。&lt;/p&gt;
&lt;h2 id=&#34;移动端&#34;&gt;移动端&lt;/h2&gt;
&lt;p&gt;Miniflux 是一个 PWA(Progressive web app) 应用，跨平台，响应式设计，在手机浏览器中也有很好的体验。&lt;/p&gt;
&lt;p&gt;在iOS 的 Safari 和 Android 的 Chrome 上你可以手机主界面上创建快捷方式，方便直接访问。&lt;/p&gt;
&lt;p&gt;也可以使用第三方客户端连接，前提是在 Miniflux 设置里开启 Fever API:&lt;/p&gt;
&lt;p&gt;Android 推荐 FeedMe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.seazon.feedme&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;iOS 推荐 Reeder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Apple Store 中自行搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://miniflux.app/docs/installation.html#docker&#34;&gt;Miniflux Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.rsshub.app/install/#docker-compose-bu-shu&#34;&gt;RSSHub 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://certbot.eff.org/&#34;&gt;Certbot Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://nginx.org/en/docs/http/configuring_https_servers.html&#34;&gt;Nginx Configuring HTTPS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nginx.com/blog/using-free-ssltls-certificates-from-lets-encrypt-with-nginx/&#34;&gt;Using Let&amp;rsquo;s Encrypt with Nginx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/&#34;&gt;Nginx configuring HTTP Basic Authentication&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matrix-org/matrix-federation-tester/issues/59&#34;&gt;x509: certificate signed by unknown authority&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>部署 GOST HTTPS 代理</title>
      <link>/blog/posts/gost-https-proxy-deployment-via-docker-on-ubuntu/</link>
      <pubDate>Wed, 18 Mar 2020 21:38:50 +0800</pubDate>
      
      <guid>/blog/posts/gost-https-proxy-deployment-via-docker-on-ubuntu/</guid>
      <description>&lt;p&gt;目前 HTTPS 是比较稳一种协议。&lt;/p&gt;
&lt;p&gt;GOST 是一个GO语言实现的代理工具，官网有详细介绍，链接在文章底部。&lt;/p&gt;
&lt;p&gt;本文主要记录用 GOST 部署 HTTPS 代理服务的过程。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;VPS 初始化以及 Docker 安装参考这篇文章 &lt;a href=&#34;/blog/posts/ubuntu-server-initiation-and-docker-installation&#34;&gt;Ubuntu VPS 初始化设置 + Docker安装&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;解析域名到-vps&#34;&gt;解析域名到 VPS&lt;/h2&gt;
&lt;p&gt;你需要有一个域名，并且将它解析到你的 VPS 上。&lt;/p&gt;
&lt;h2 id=&#34;使用-certbot-签发-lets-encrypt-证书&#34;&gt;使用 Certbot 签发 Let&amp;rsquo;s Encrypt 证书&lt;/h2&gt;
&lt;p&gt;安装 certbot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt-get update
$ sudo apt-get install software-properties-common
$ sudo add-apt-repository universe
$ sudo add-apt-repository ppa:certbot/certbot
$ sudo apt-get update
$ sudo apt-get install certbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;签发证书:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo certbot certonly --standalone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据提示输入域名和邮箱&lt;/p&gt;
&lt;p&gt;证书默认生成在&lt;code&gt;/etc/letsencrypt/live/&amp;lt;YOUR.DOMAIN.COM/&amp;gt;&lt;/code&gt;目录下&lt;/p&gt;
&lt;h2 id=&#34;部署-gost-docker-镜像&#34;&gt;部署 Gost Docker 镜像&lt;/h2&gt;
&lt;p&gt;创建启动脚本 gost.sh:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 下面的四个参数需要改成你的&lt;/span&gt;
domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;
username&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;
password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;
port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;

bind_ip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.0.0.0
cert_dir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/letsencrypt/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;domain&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
cert_file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;cert_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/fullchain.pem
key_file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;cert_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/privkey.pem
sudo docker run -d --name gost &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -v &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;cert_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;cert_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:ro &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --net&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;host ginuerzh/gost &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -L &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http2://&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;bind_ip&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;?cert=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;cert_file&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;key=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;key_file&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动服务:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ chmod +x gost.sh
$ ./gost.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;证书自动更新&#34;&gt;证书自动更新&lt;/h2&gt;
&lt;p&gt;证书会在90天后过期，我们建立一个cron job来自动更新证书:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo crontab -e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;写入如下内容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * * /usr/bin/certbot renew --force-renewal
&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * * /usr/bin/docker restart gost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;crontab格式说明:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;分&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0-59&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 时&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0-23&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 日&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1-31&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 月&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1-12&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 星期&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0-7&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 要执行的命令
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;客户端&#34;&gt;客户端&lt;/h2&gt;
&lt;p&gt;PC: Clash for Windows，下载地址:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases&#34;&gt;Github Release&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Android:&lt;/p&gt;
&lt;p&gt;Clash for Android，下载地址:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kr328/ClashForAndroid/releases&#34;&gt;Github Release&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.github.kr328.clash&#34;&gt;Google Play&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Surfboard，兼容 Surge 配置文件，下载地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://apkpure.com/surfboard/com.getsurfboard&#34;&gt;APK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.getsurfboard&#34;&gt;Google Play&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;iOS: ShadowRocket / Surge ，ShadowRocket 兼容 Surge 配置文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;美区 Apple Store 搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分流规则&#34;&gt;分流规则&lt;/h2&gt;
&lt;p&gt;自动生成配置文件 (Surge / Clash)，适用于以上全部客户端&lt;/p&gt;
&lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/dodowhat/gfwrules&#34;&gt;https://github.com/dodowhat/gfwrules&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://certbot.eff.org/lets-encrypt/ubuntubionic-other&#34;&gt;Certbot Doc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://haoel.github.io/&#34;&gt;科学上网-左耳朵&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.ginuerzh.xyz/gost/tls/&#34;&gt;Gost 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Dreamacro/clash&#34;&gt;Clash Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://manual.nssurge.com/&#34;&gt;Surge Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://manual.getsurfboard.com/&#34;&gt;Surfbloard 官网&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Server 初始化设置 &#43; Docker 安装</title>
      <link>/blog/posts/ubuntu-server-initiation-and-docker-installation/</link>
      <pubDate>Tue, 17 Mar 2020 21:14:08 +0800</pubDate>
      
      <guid>/blog/posts/ubuntu-server-initiation-and-docker-installation/</guid>
      <description>&lt;p&gt;本文主要记录 Ubuntu Server 的一些初始化操作。&lt;/p&gt;
&lt;p&gt;适用于本机、虚拟机、VPS 云主机等等创建后初次运行时参考，方便后续维护使用。&lt;/p&gt;
&lt;p&gt;包括：新增普通权限用户、配置SSH密钥登录、Docker 安装。&lt;/p&gt;
&lt;p&gt;关于普通权限用户，有些运营商的云主机创建后已自动配置好，不需要自己操作了，如 GCE(Google Compute Engine), EC2(Amazon EC2)等等。&lt;/p&gt;
&lt;p&gt;有些运营商则只有 root 用户，如：阿里云。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下面以阿里云为例。&lt;/p&gt;
&lt;p&gt;首先，登录root用户。&lt;/p&gt;
&lt;h2 id=&#34;更新系统&#34;&gt;更新系统:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;# apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;新增普通用户&#34;&gt;新增普通用户:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;# adduser user1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为新用户配置sudo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;# update-alternatives --config editor # 变更默认文本编辑器(非必要步骤)
# visudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加新行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;user1 ALL=(ALL) NOPASSWD: ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;切换至新用户:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;# su - user1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;导入SSH密钥:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir ~/.ssh
$ vim ~/.ssh/authorized_keys  &lt;span style=&#34;color:#75715e&#34;&gt;# 写入公钥，格式(单行)：ssh-rsa your_public_key&lt;/span&gt;
$ chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt; ~/.ssh
$ chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;644&lt;/span&gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更新SSH配置，禁用root远程登录以及密码登录:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo vim /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;找到以下内容并在行首加#号注释掉:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;PermitRootLogin yes  &lt;span style=&#34;color:#75715e&#34;&gt;# 允许root远程登录&lt;/span&gt;
PasswordAuthentication yes  &lt;span style=&#34;color:#75715e&#34;&gt;# 允许密码登录&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启SSH服务:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo systemctl restart ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置putty&#34;&gt;配置Putty&lt;/h2&gt;
&lt;p&gt;Connection -&amp;gt; Seconds between keepalives 设为60，防止超时卡死。&lt;/p&gt;
&lt;p&gt;退出登录时使用 &lt;code&gt;Ctrl-D&lt;/code&gt; 或 &lt;code&gt;exit&lt;/code&gt; 命令，不要直接点X关闭，否则连接进程会驻留，占用资源。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;w&lt;/code&gt; 命令查看当前登录用户。&lt;/p&gt;
&lt;p&gt;踢掉某用户:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo pkill -kill -t pts/0  &lt;span style=&#34;color:#75715e&#34;&gt;# pts/0是w命令输出的TTY列的值&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-docker&#34;&gt;安装 Docker&lt;/h2&gt;
&lt;p&gt;准备工作:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt-get update
$ sudo apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-transport-https &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ca-certificates &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gnupg-agent &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加软件源(二选一):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 官方源&lt;/span&gt;
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
$ sudo add-apt-repository &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; \
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   stable&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 国内源&lt;/span&gt;
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
$ sudo add-apt-repository &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; \
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   stable&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt-get update
$ sudo apt-get install -y docker-ce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想要以普通用户使用 Docker，就将用户加入docker组:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo usermod -aG docker user1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 &lt;code&gt;docker-compose&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo curl -L &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/docker/compose/releases/download/1.25.4/docker-compose-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;uname -s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;uname -m&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -o /usr/local/bin/docker-compose
$ sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考资料:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/install/linux/docker-ce/ubuntu/&#34;&gt;Docker 安装官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yeasy.gitbooks.io/docker_practice/content/install/ubuntu.html&#34;&gt;Docker 从入门到实践&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>